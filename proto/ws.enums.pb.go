// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: ws.enums.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PERSONAL_STATE int32

const (
	PERSONAL_STATE_OFFLINE   PERSONAL_STATE = 0
	PERSONAL_STATE_ONLINE    PERSONAL_STATE = 1
	PERSONAL_STATE_IDLE      PERSONAL_STATE = 2
	PERSONAL_STATE_BUSY      PERSONAL_STATE = 3
	PERSONAL_STATE_INVISIBLE PERSONAL_STATE = 4
)

// Enum value maps for PERSONAL_STATE.
var (
	PERSONAL_STATE_name = map[int32]string{
		0: "OFFLINE",
		1: "ONLINE",
		2: "IDLE",
		3: "BUSY",
		4: "INVISIBLE",
	}
	PERSONAL_STATE_value = map[string]int32{
		"OFFLINE":   0,
		"ONLINE":    1,
		"IDLE":      2,
		"BUSY":      3,
		"INVISIBLE": 4,
	}
)

func (x PERSONAL_STATE) Enum() *PERSONAL_STATE {
	p := new(PERSONAL_STATE)
	*p = x
	return p
}

func (x PERSONAL_STATE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PERSONAL_STATE) Descriptor() protoreflect.EnumDescriptor {
	return file_ws_enums_proto_enumTypes[0].Descriptor()
}

func (PERSONAL_STATE) Type() protoreflect.EnumType {
	return &file_ws_enums_proto_enumTypes[0]
}

func (x PERSONAL_STATE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PERSONAL_STATE.Descriptor instead.
func (PERSONAL_STATE) EnumDescriptor() ([]byte, []int) {
	return file_ws_enums_proto_rawDescGZIP(), []int{0}
}

type EMSG int32

const (
	EMSG_INVALID                   EMSG = 0
	EMSG_PING                      EMSG = 1
	EMSG_PONG                      EMSG = 2
	EMSG_LOGON                     EMSG = 3
	EMSG_LOGOUT                    EMSG = 4
	EMSG_PERSONAL_STATE_CHANGED    EMSG = 5
	EMSG_PERSONAL_ACTIVITY_CHANGED EMSG = 6
	EMSG_AUTHORIZED                EMSG = 7
	EMSG_UNAUTHORIZED              EMSG = 8
	EMSG_CHAT_MESSAGES             EMSG = 9
	EMSG_LOG_MESSAGES              EMSG = 10
	// Theater general events
	EMSG_NEW_CHAT_MESSAGE             EMSG = 11
	EMSG_NEW_LOG_MESSAGE              EMSG = 12
	EMSG_MEMBER_STATE_CHANGED         EMSG = 13
	EMSG_THEATER_MEMBERS              EMSG = 14
	EMSG_THEATER_PLAY                 EMSG = 15
	EMSG_THEATER_BUFFERED_AND_PLAYED  EMSG = 16
	EMSG_THEATER_PAUSE                EMSG = 17
	EMSG_NEW_NOTIFICATION             EMSG = 18
	EMSG_FRIEND_REQUEST_ACCEPTED      EMSG = 19
	EMSG_THEATER_UPDATED              EMSG = 20
	EMSG_THEATER_MEDIA_SOURCE_CHANGED EMSG = 21
	// Theater video player events
	EMSG_SYNC_ME             EMSG = 22
	EMSG_SYNCED              EMSG = 23
	EMSG_BUFFERING           EMSG = 24
	EMSG_BUFFERED            EMSG = 25
	EMSG_WAITING_FOR_CLIENTS EMSG = 26
	EMSG_CLIENTS_SYNCYED     EMSG = 27
	EMSG_FINISHED_MOVIE      EMSG = 28
	EMSG_PLAYING             EMSG = 29
	EMSG_CLIENT_READY        EMSG = 30
	// messages
	EMSG_MESSAGE_EDITED  EMSG = 31
	EMSG_MESSAGE_DELETED EMSG = 32
	// USER events
	EMSG_USER_UPDATED                   EMSG = 33
	EMSG_SELF_USER_UPDATED              EMSG = 34
	EMSG_SELF_PERSONAL_STATE_CHANGED    EMSG = 35
	EMSG_SELF_PERSONAL_ACTIVITY_CHANGED EMSG = 36
	EMSG_SELF_FRIEND_REQUEST_ACCEPTED   EMSG = 37
	EMSG_JOIN_THEATER                   EMSG = 38
	EMSG_LEAVE_THEATER                  EMSG = 39
	EMSG_NEW_FRIEND                     EMSG = 40
	EMSG_REMOVED_FRIEND                 EMSG = 41
	EMSG_INCOMING_CALL                  EMSG = 42
	EMSG_CALLLING                       EMSG = 43
	EMSG_DECLINED                       EMSG = 44
	EMSG_ANSWERED                       EMSG = 45
	EMSG_GET_FRIEND_STATE               EMSG = 46
	// Media server events
	EMSG_VOICE_CONNECTION_UPDATED  EMSG = 47
	EMSG_VOICE_CONNECTION_CREATED  EMSG = 48
	EMSG_VOICE_CONNECTION_REMOVED  EMSG = 49
	EMSG_VOICE_CONNECTION_MUTED    EMSG = 50
	EMSG_VOICE_CONNECTION_DEAFENED EMSG = 51
	EMSG_RELAY_SESSION_DESCRIPTION EMSG = 52
	EMSG_RELAY_ICE_CANDIDATE       EMSG = 53
	EMSG_RENEGOTIATION_NEEDED      EMSG = 54
	EMSG_JOIN_THEATER_VOICE_SERVER EMSG = 55
)

// Enum value maps for EMSG.
var (
	EMSG_name = map[int32]string{
		0:  "INVALID",
		1:  "PING",
		2:  "PONG",
		3:  "LOGON",
		4:  "LOGOUT",
		5:  "PERSONAL_STATE_CHANGED",
		6:  "PERSONAL_ACTIVITY_CHANGED",
		7:  "AUTHORIZED",
		8:  "UNAUTHORIZED",
		9:  "CHAT_MESSAGES",
		10: "LOG_MESSAGES",
		11: "NEW_CHAT_MESSAGE",
		12: "NEW_LOG_MESSAGE",
		13: "MEMBER_STATE_CHANGED",
		14: "THEATER_MEMBERS",
		15: "THEATER_PLAY",
		16: "THEATER_BUFFERED_AND_PLAYED",
		17: "THEATER_PAUSE",
		18: "NEW_NOTIFICATION",
		19: "FRIEND_REQUEST_ACCEPTED",
		20: "THEATER_UPDATED",
		21: "THEATER_MEDIA_SOURCE_CHANGED",
		22: "SYNC_ME",
		23: "SYNCED",
		24: "BUFFERING",
		25: "BUFFERED",
		26: "WAITING_FOR_CLIENTS",
		27: "CLIENTS_SYNCYED",
		28: "FINISHED_MOVIE",
		29: "PLAYING",
		30: "CLIENT_READY",
		31: "MESSAGE_EDITED",
		32: "MESSAGE_DELETED",
		33: "USER_UPDATED",
		34: "SELF_USER_UPDATED",
		35: "SELF_PERSONAL_STATE_CHANGED",
		36: "SELF_PERSONAL_ACTIVITY_CHANGED",
		37: "SELF_FRIEND_REQUEST_ACCEPTED",
		38: "JOIN_THEATER",
		39: "LEAVE_THEATER",
		40: "NEW_FRIEND",
		41: "REMOVED_FRIEND",
		42: "INCOMING_CALL",
		43: "CALLLING",
		44: "DECLINED",
		45: "ANSWERED",
		46: "GET_FRIEND_STATE",
		47: "VOICE_CONNECTION_UPDATED",
		48: "VOICE_CONNECTION_CREATED",
		49: "VOICE_CONNECTION_REMOVED",
		50: "VOICE_CONNECTION_MUTED",
		51: "VOICE_CONNECTION_DEAFENED",
		52: "RELAY_SESSION_DESCRIPTION",
		53: "RELAY_ICE_CANDIDATE",
		54: "RENEGOTIATION_NEEDED",
		55: "JOIN_THEATER_VOICE_SERVER",
	}
	EMSG_value = map[string]int32{
		"INVALID":                        0,
		"PING":                           1,
		"PONG":                           2,
		"LOGON":                          3,
		"LOGOUT":                         4,
		"PERSONAL_STATE_CHANGED":         5,
		"PERSONAL_ACTIVITY_CHANGED":      6,
		"AUTHORIZED":                     7,
		"UNAUTHORIZED":                   8,
		"CHAT_MESSAGES":                  9,
		"LOG_MESSAGES":                   10,
		"NEW_CHAT_MESSAGE":               11,
		"NEW_LOG_MESSAGE":                12,
		"MEMBER_STATE_CHANGED":           13,
		"THEATER_MEMBERS":                14,
		"THEATER_PLAY":                   15,
		"THEATER_BUFFERED_AND_PLAYED":    16,
		"THEATER_PAUSE":                  17,
		"NEW_NOTIFICATION":               18,
		"FRIEND_REQUEST_ACCEPTED":        19,
		"THEATER_UPDATED":                20,
		"THEATER_MEDIA_SOURCE_CHANGED":   21,
		"SYNC_ME":                        22,
		"SYNCED":                         23,
		"BUFFERING":                      24,
		"BUFFERED":                       25,
		"WAITING_FOR_CLIENTS":            26,
		"CLIENTS_SYNCYED":                27,
		"FINISHED_MOVIE":                 28,
		"PLAYING":                        29,
		"CLIENT_READY":                   30,
		"MESSAGE_EDITED":                 31,
		"MESSAGE_DELETED":                32,
		"USER_UPDATED":                   33,
		"SELF_USER_UPDATED":              34,
		"SELF_PERSONAL_STATE_CHANGED":    35,
		"SELF_PERSONAL_ACTIVITY_CHANGED": 36,
		"SELF_FRIEND_REQUEST_ACCEPTED":   37,
		"JOIN_THEATER":                   38,
		"LEAVE_THEATER":                  39,
		"NEW_FRIEND":                     40,
		"REMOVED_FRIEND":                 41,
		"INCOMING_CALL":                  42,
		"CALLLING":                       43,
		"DECLINED":                       44,
		"ANSWERED":                       45,
		"GET_FRIEND_STATE":               46,
		"VOICE_CONNECTION_UPDATED":       47,
		"VOICE_CONNECTION_CREATED":       48,
		"VOICE_CONNECTION_REMOVED":       49,
		"VOICE_CONNECTION_MUTED":         50,
		"VOICE_CONNECTION_DEAFENED":      51,
		"RELAY_SESSION_DESCRIPTION":      52,
		"RELAY_ICE_CANDIDATE":            53,
		"RENEGOTIATION_NEEDED":           54,
		"JOIN_THEATER_VOICE_SERVER":      55,
	}
)

func (x EMSG) Enum() *EMSG {
	p := new(EMSG)
	*p = x
	return p
}

func (x EMSG) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EMSG) Descriptor() protoreflect.EnumDescriptor {
	return file_ws_enums_proto_enumTypes[1].Descriptor()
}

func (EMSG) Type() protoreflect.EnumType {
	return &file_ws_enums_proto_enumTypes[1]
}

func (x EMSG) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EMSG.Descriptor instead.
func (EMSG) EnumDescriptor() ([]byte, []int) {
	return file_ws_enums_proto_rawDescGZIP(), []int{1}
}

var File_ws_enums_proto protoreflect.FileDescriptor

var file_ws_enums_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x77, 0x73, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2a, 0x4c, 0x0a, 0x0e, 0x50, 0x45, 0x52, 0x53, 0x4f,
	0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46,
	0x4c, 0x49, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x4e, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x42, 0x55, 0x53, 0x59, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x56, 0x49, 0x53, 0x49,
	0x42, 0x4c, 0x45, 0x10, 0x04, 0x2a, 0xbc, 0x09, 0x0a, 0x04, 0x45, 0x4d, 0x53, 0x47, 0x12, 0x0b,
	0x0a, 0x07, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x50,
	0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x50, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x47, 0x4f, 0x4e, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4c, 0x4f,
	0x47, 0x4f, 0x55, 0x54, 0x10, 0x04, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e,
	0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44,
	0x10, 0x05, 0x12, 0x1d, 0x0a, 0x19, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x41,
	0x43, 0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10,
	0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45, 0x44, 0x10,
	0x07, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x41, 0x55, 0x54, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x45,
	0x44, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x53, 0x10, 0x09, 0x12, 0x10, 0x0a, 0x0c, 0x4c, 0x4f, 0x47, 0x5f, 0x4d, 0x45,
	0x53, 0x53, 0x41, 0x47, 0x45, 0x53, 0x10, 0x0a, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x45, 0x57, 0x5f,
	0x43, 0x48, 0x41, 0x54, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x13,
	0x0a, 0x0f, 0x4e, 0x45, 0x57, 0x5f, 0x4c, 0x4f, 0x47, 0x5f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47,
	0x45, 0x10, 0x0c, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x53, 0x54,
	0x41, 0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x0d, 0x12, 0x13, 0x0a,
	0x0f, 0x54, 0x48, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x4d, 0x45, 0x4d, 0x42, 0x45, 0x52, 0x53,
	0x10, 0x0e, 0x12, 0x10, 0x0a, 0x0c, 0x54, 0x48, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x50, 0x4c,
	0x41, 0x59, 0x10, 0x0f, 0x12, 0x1f, 0x0a, 0x1b, 0x54, 0x48, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f,
	0x42, 0x55, 0x46, 0x46, 0x45, 0x52, 0x45, 0x44, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x4c, 0x41,
	0x59, 0x45, 0x44, 0x10, 0x10, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x48, 0x45, 0x41, 0x54, 0x45, 0x52,
	0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x10, 0x11, 0x12, 0x14, 0x0a, 0x10, 0x4e, 0x45, 0x57, 0x5f,
	0x4e, 0x4f, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x12, 0x12, 0x1b,
	0x0a, 0x17, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44, 0x10, 0x13, 0x12, 0x13, 0x0a, 0x0f, 0x54,
	0x48, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x14,
	0x12, 0x20, 0x0a, 0x1c, 0x54, 0x48, 0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44,
	0x10, 0x15, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x59, 0x4e, 0x43, 0x5f, 0x4d, 0x45, 0x10, 0x16, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x59, 0x4e, 0x43, 0x45, 0x44, 0x10, 0x17, 0x12, 0x0d, 0x0a, 0x09, 0x42,
	0x55, 0x46, 0x46, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x18, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x55,
	0x46, 0x46, 0x45, 0x52, 0x45, 0x44, 0x10, 0x19, 0x12, 0x17, 0x0a, 0x13, 0x57, 0x41, 0x49, 0x54,
	0x49, 0x4e, 0x47, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x53, 0x10,
	0x1a, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4c, 0x49, 0x45, 0x4e, 0x54, 0x53, 0x5f, 0x53, 0x59, 0x4e,
	0x43, 0x59, 0x45, 0x44, 0x10, 0x1b, 0x12, 0x12, 0x0a, 0x0e, 0x46, 0x49, 0x4e, 0x49, 0x53, 0x48,
	0x45, 0x44, 0x5f, 0x4d, 0x4f, 0x56, 0x49, 0x45, 0x10, 0x1c, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4c,
	0x41, 0x59, 0x49, 0x4e, 0x47, 0x10, 0x1d, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4c, 0x49, 0x45, 0x4e,
	0x54, 0x5f, 0x52, 0x45, 0x41, 0x44, 0x59, 0x10, 0x1e, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x45, 0x53,
	0x53, 0x41, 0x47, 0x45, 0x5f, 0x45, 0x44, 0x49, 0x54, 0x45, 0x44, 0x10, 0x1f, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x20, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54,
	0x45, 0x44, 0x10, 0x21, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x22, 0x12, 0x1f, 0x0a, 0x1b, 0x53,
	0x45, 0x4c, 0x46, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x23, 0x12, 0x22, 0x0a, 0x1e,
	0x53, 0x45, 0x4c, 0x46, 0x5f, 0x50, 0x45, 0x52, 0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x41, 0x43,
	0x54, 0x49, 0x56, 0x49, 0x54, 0x59, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x44, 0x10, 0x24,
	0x12, 0x20, 0x0a, 0x1c, 0x53, 0x45, 0x4c, 0x46, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x45, 0x44,
	0x10, 0x25, 0x12, 0x10, 0x0a, 0x0c, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x54, 0x48, 0x45, 0x41, 0x54,
	0x45, 0x52, 0x10, 0x26, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x45, 0x41, 0x56, 0x45, 0x5f, 0x54, 0x48,
	0x45, 0x41, 0x54, 0x45, 0x52, 0x10, 0x27, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x45, 0x57, 0x5f, 0x46,
	0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x28, 0x12, 0x12, 0x0a, 0x0e, 0x52, 0x45, 0x4d, 0x4f, 0x56,
	0x45, 0x44, 0x5f, 0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x10, 0x29, 0x12, 0x11, 0x0a, 0x0d, 0x49,
	0x4e, 0x43, 0x4f, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x41, 0x4c, 0x4c, 0x10, 0x2a, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x41, 0x4c, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x2b, 0x12, 0x0c, 0x0a, 0x08,
	0x44, 0x45, 0x43, 0x4c, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x2c, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x4e,
	0x53, 0x57, 0x45, 0x52, 0x45, 0x44, 0x10, 0x2d, 0x12, 0x14, 0x0a, 0x10, 0x47, 0x45, 0x54, 0x5f,
	0x46, 0x52, 0x49, 0x45, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x10, 0x2e, 0x12, 0x1c,
	0x0a, 0x18, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x2f, 0x12, 0x1c, 0x0a, 0x18,
	0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x44, 0x10, 0x30, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x4f,
	0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52,
	0x45, 0x4d, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x31, 0x12, 0x1a, 0x0a, 0x16, 0x56, 0x4f, 0x49, 0x43,
	0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4d, 0x55, 0x54,
	0x45, 0x44, 0x10, 0x32, 0x12, 0x1d, 0x0a, 0x19, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x43, 0x4f,
	0x4e, 0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x41, 0x46, 0x45, 0x4e, 0x45,
	0x44, 0x10, 0x33, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x53, 0x45, 0x53,
	0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x34, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x45, 0x4c, 0x41, 0x59, 0x5f, 0x49, 0x43, 0x45, 0x5f,
	0x43, 0x41, 0x4e, 0x44, 0x49, 0x44, 0x41, 0x54, 0x45, 0x10, 0x35, 0x12, 0x18, 0x0a, 0x14, 0x52,
	0x45, 0x4e, 0x45, 0x47, 0x4f, 0x54, 0x49, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x45, 0x45,
	0x44, 0x45, 0x44, 0x10, 0x36, 0x12, 0x1d, 0x0a, 0x19, 0x4a, 0x4f, 0x49, 0x4e, 0x5f, 0x54, 0x48,
	0x45, 0x41, 0x54, 0x45, 0x52, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56,
	0x45, 0x52, 0x10, 0x37, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ws_enums_proto_rawDescOnce sync.Once
	file_ws_enums_proto_rawDescData = file_ws_enums_proto_rawDesc
)

func file_ws_enums_proto_rawDescGZIP() []byte {
	file_ws_enums_proto_rawDescOnce.Do(func() {
		file_ws_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_ws_enums_proto_rawDescData)
	})
	return file_ws_enums_proto_rawDescData
}

var file_ws_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ws_enums_proto_goTypes = []interface{}{
	(PERSONAL_STATE)(0), // 0: proto.PERSONAL_STATE
	(EMSG)(0),           // 1: proto.EMSG
}
var file_ws_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_ws_enums_proto_init() }
func file_ws_enums_proto_init() {
	if File_ws_enums_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ws_enums_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ws_enums_proto_goTypes,
		DependencyIndexes: file_ws_enums_proto_depIdxs,
		EnumInfos:         file_ws_enums_proto_enumTypes,
	}.Build()
	File_ws_enums_proto = out.File
	file_ws_enums_proto_rawDesc = nil
	file_ws_enums_proto_goTypes = nil
	file_ws_enums_proto_depIdxs = nil
}
